*go-task.txt*	go-task integration

Author: shutils
License: MIT license

CONTENTS				*go-task-contents*

INTRODUCTION		|go-task-introduction|
INSTALL			|go-task-install|
USAGE			|go-task-usage|
	COMMAND		|go-task-command|
	VARIABLES	|go-task-variables|


==============================================================================
INTRODUCTION				*go-task-introduction*

This plugin is an integration of go-task.


==============================================================================
INSTALL					*go-task-install*

Install it with your plugin manager. Below is an example of
lazy.nvim.

>
require("lazy").setup({
  "shutils/go-task.vim",
})
<

==============================================================================
USAGE					*go-task-usage*

------------------------------------------------------------------------------
COMMAND					*go-task-command*

							*:GoTask*
:GoTask [-r_autoclose={true | false}] [-s_autoclose={true | false}]
	[-s_direction={left | right | leftend | rightend | on | under |
		top | bottom}]
	[-r_direction={left | right | leftend | rightend | on | under |
		top | bottom}]
	[-s_adjust={true | false}]
	Get tasks from the current directory and display them in a buffer.

	Pressing the enter key on the opened buffer will open a terminal in
	the new buffer and execute the command.

	Pressing the q key closes the buffer.

							*r_autoclose*
	If true is passed to r_autoclose, the runner will be automatically
	closed if the job completes successfully after executing the task.

	Default: false

							*s_autoclose*
	If true is passed to s_autoclose, the selector will be closed
	after the task is executed.

	Default: false

							*s_direction*
	Sets the position of the task selector relative to the current window.

	Default: rightend

							*r_direction*
	Sets the position of the task runner relative to the selector window.

	Default: bottom

							*s_adjust*
	Enables or disables selector automatic width adjustment.
	NOTE:
	In order not to destroy the existing buffer size, this feature is
	enabled only when |s_direction| is left, right, leftend, or rightend.

	Default: true

							*:GoTaskInit*
:GoTaskInit
	Create a task file in the current directory. It will not be created
	if it already exists.

------------------------------------------------------------------------------
VARIABLES				*go-task-variables*

					*g:go_task_custom_task_cmd_name*
	If this variable is set, the plugin will use the configured commands
	to retrieve and execute tasks.
	This variable is useful when the task command is installed with a
	different name (e.g. go-task)

	Default: v:null

					*g:go_task_s_autoclose*
	If this variable is set, its value becomes the default for s_autoclose
	in the GoTask command.
	If args are set in the GoTask command, those values will take
	precedence.

	Default: v:null

					*g:go_task_r_autoclose*
	If this variable is set, its value becomes the default for r_autoclose
	in the GoTask command.
	If args are set in the GoTask command, those values will take
	precedence.

	Default: v:null

					*g:go_task_s_direction*
	If this variable is set, its value becomes the default for s_direction
	in the GoTask command.
	If args are set in the GoTask command, those values will take
	precedence.

	Default: v:null

					*g:go_task_r_direction*
	If this variable is set, its value becomes the default for r_direction
	in the GoTask command.
	If args are set in the GoTask command, those values will take
	precedence.

	Default: v:null

					*g:go_task_s_adjust*
	If this variable is set, its value becomes the default for s_adjust
	in the GoTask command.
	If args are set in the GoTask command, those values will take
	precedence.

	Default: v:null

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:noet:
